{
  
    
        "post0": {
            "title": "Fastbook_ch2_ans",
            "content": "Chapter 2 answers to questions . Provide an example of where the bear classification model might work poorly, due to structural or style differences to the training data. Night time where the lighting is darker and images are more grayscale . | Where do text models currently have a major deficiency? Text models can mimic text well, but don’t seem to understand what they are mimicing. Text models are not good at generating correct responses . | What are possible negative societal implications of text generation models? Biases can be built into these models. These text models could be used for online trolling or spreading misinfromation on social media . | In situations where a model might make mistakes, and those mistakes could be harmful, what is a good alternative to automating a process? Add a human into the process to check the model’s predictions . | What kind of tabular data is deep learning particularly good at? Text, eg titles, reviews, comments . | What’s a key downside of directly using a deep learning model for recommendation systems? Deep learning models are predictors, not recommenders. So, the models look at your history, and find similar items. Rather than try to push your boundaries a little to see if you might like something new . | What are the steps of the Drivetrain approach? 1) Define objective 2) Figure out the levers 3) Get data 4) Use the data to model how the objective changes using the available levers . | How do the steps of the Drivetrain approach map to a recommendation system? The Drivetrain approach is a methodology to create actionable outcomes from data, and not just predictions. 1) Want more sales through recommendations 2) Rank the recommendations 3) Run experiments to see if new recommendations cause new sales 4) Compare new model with existing/baseline model to see if changes caused more sales from recommendations . | Create an image recognition model using data you curate, and deploy it on the web. Done . | What is DataLoaders? A dataloaders is a collection of dataloader objects from the FASTAI library A dataloader object contains information on how to retrieve the data (paths, names, labels, splits) . | What four things do we need to tell fastai to create DataLoaders? 1) What kind of data we are working with 2) How to get the list of items 3) How to label these images 4) How to create a validation set . | What does the splitter parameter to DataBlock do? Splitter tells the dataloaders function how to split the data into training and validation sets . | How do we ensure a random split always gives the same validation set? Pass a seed=### argument into the RandomSplitter. Use the same seed number each time . | What letters are often used to signify the independent and dependent variables? Independent = x Dependent = y . | What’s the difference between crop, pad, and squish resize approaches? When might you choose one over the other? Crop takes a centered crop of the image Pad adds 0’s to the perimeter of images if the images are too small (black borders) Squish squeezes an image into the specified size. Distorts image If the images are always centered, crop is ok. If you want the whole image without any changes, and have different sizes, then padding works. Use squish if you need faster compute, and the application actually has similar distortions. . | What is data augmentation? Why is it needed? Data augmentation is when you add transforms (change contrast, brightness, rotate, skew, flip, etc.) to images. Data augmentation is used when the training data is small, which seems to be the case for all image data sets. . | What is the difference between item_tfms and batch_tfms? Item_tfms does transformations on a per item basis, and is usually just used for resizing images. Item_tfms works before batch_tfms Batch_tfms applies transforms on a batch at a time. As a result, it assumes the inputs are all the same shape item_tfms and batch_tfms are arguments for the DataLoader class . | What is a confusion matrix? A confusion matrix is a table showing correct/wrong predictions, as well as false positives and false negatives. On the table, the y&gt;axis are the actual labels. On the x&gt;axis are the model predictions. Given a table x,y point, that point represents the number of times the actual label, and predicted label happened together. The diagonal of the table represents when the actual label and predicted label were the same. . | What does export save? Export saves a ‘.pkl’ file. This file contains the model architecture, parameters, and also the definition of how to create the dataloaders . | What is it called when we use a model for getting predictions, instead of training? Inference . | What are IPython widgets? Software that allows you to use JavaScript and Python in a web browser . | When might you want to use CPU for deployment? When might GPU be better? Use CPU for deployment when the user experience is adequate. CPU is generally cheaper. May want a GPU if you get enough traffic, and are able to batch together jobs . | What are the downsides of deploying your app to a server, instead of to a client (or edge) device such as a phone or PC? Deploying to your server means you have to maintain the hardware, and also the scaling burden is on you. On a phone, it is horizontal scaling and the client “takes” the scaling cost . | What are 3 examples of problems that could occur when rolling out a bear warning system in practice? 1) Out of domain data, 2) Domain shift Examples of “out of domain data” are low resolution photos, night time photos, latency between prediction and response to user . | What is “out of domain data”? Input data that has a distribution a lot different than the training data distribution . | What is “domain shift”? Domain shift is when your input data distribution changes, and moves away from the original training data distribution . | What are the 3 steps in the deployment process? 1) Manual process, run models in parallel and check outputs by hand 2) Limited scope deployment, try the model in the wild for a limited time/area and supervise the performance 3) Gradual expansion, expand the scope. This will require a good reporting system in order to get debugging information if things go wrong. For example, out of domain data or domain shift. . | For a project you’re interested in applying deep learning to, consider the thought experiment “what would happen if it went really, really well?” Done . | Start a blog, and write your first blog post. For instance, write about what you think deep learning might be useful for in a domain you’re interested in. Done. Thinking about an invasive flower classifier. . | Furthur research . Consider how the Drivetrain approach maps to a project or problem you’re interested in. I think the approach let’s you understand how different parts interact . | When might it be best to avoid certain types of data augmentation? When the data augmentation transforms images to look like another image label. For example, on MNIST, you do not want to do a horizontal flip because a b and d could look the same. Another example are numbers where you do not want to flip vertically because a 6 and a 9 could look the same . |",
            "url": "https://datadote.github.io/blog/2020/03/29/fastbook_ch2_ans.html",
            "relUrl": "/2020/03/29/fastbook_ch2_ans.html",
            "date": " • Mar 29, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastbook_ch1_ans",
            "content": "Chapter 1 Answers to questions . 1) Do you need these for deep learning? Lots of math T / F Lots of data T / F Lots of expensive computers T / F A PhD T / F . FFFF . 2) Name five areas where deep learning is now the best in the world. . Vision, NLP, robotics, image generation, playing games, recommendation systems . 3) What was the name of the first device that was based on the principle of the artificial neuron? . The Mark I Perceptron . 4) Based on the book of the same name, what are the requirements for “Parallel Distributed Processing”? . Needs the following: set of processing units, a state of activation, an output function for each unit, a pattern of connectivity among units, a propagation rule for propagating patterns of activity through the network of connectivities, an activation rule to combine inputs, a learning rule where patterns of connectivity are modified by experience, an environment within which the system must operate . ?? 5) What were the two theoretical misunderstandings that held back the field of neural networks? . Marvin Minsky showing 1 layer of NN couldn’t perform some math functions (eg XOR) . 6) What is a GPU? . Graphics processing unit, good for matrix multiplication . 7) Open a notebook and execute a cell containing: 1+1. What happens? . Prints out 2 . 8) Follow through each cell of the stripped version of the notebook for this chapter. Before executing each cell, guess what will happen . Done . 9) Complete the Jupyter Notebook online appendix. . Done . 10) Why is it hard to use a traditional computer program to recognize images in a photo? . You have to write out rules explicitly. To recognize images would take an unreasonable amount of rules. . 11) What did Samuel mean by “Weight Assignment”? . Each processing unit has a weight associated with it. This weight is updated through training. . 12) What term do we normally use in deep learning for what Samuel called “Weights”? . model parameters . 13) Draw a picture that summarizes Arthur Samuel’s view of a machine learning model . Done . 14) Why is it hard to understand why a deep learning model makes a particular prediction? . Model learns from data, and does not explain the rules explicitly . 15) What is the name of the theorem that a neural network can solve any mathematical problem to any level of accuracy? . Universal Approximation Theorm . 16) What do you need in order to train a model? . Data . 17) How could a feedback loop impact the rollout of a predictive policing model? . Positive feedback increasing a bias. Examples include predictive models for arrests or collaborative filtering for youtube videos. . 18) Do we always have to use 224x224 pixel images with the cat recognition model? . Historical reasons on imagenet . 19) What is the difference between classification and regression? . Classification has discrete outputs. Linear regression has continuous outputs . 20) What is a validation set? What is a test set? Why do we need them? . Validation set is a portion of the dataset set aside for the human to evaluate performance. It is not used for training, but for evaluation of the training . 21) What will fastai do if you don’t provide a validation set? . Fastai will automatically make a validation set based off 20% of your training data . 22) Can we always use a random sample for a validation set? Why or why not? . No, because there is a chance the validation set does not represent the actual use case. An example is time series forecasting, we want to predict the future given the past. If our training data contains data in the future of the validation set, then there is data leakage. . 23) What is overfitting? Provide an example. . Overfitting is when the model memorizes pictures, and does not learn general features. An indicator of overfitting is when there is a large difference between the training and validation loss. An example might be a car dataset where the model sees a lot of Toyota cars, but can’t tell Honda cars are cars as well. Maybe the model learned to associate cars with the Toyota logo. . 24) What is a metric? How does it differ to “loss”? . A metric is a performance indicator for humans to understand. A loss is a performance indicator for models to use in order to train, and adjust weights. . 25) How can pretrained models help? . Pretrained models help by leveraging knowledge learned on other tasks. An example is image classification. Models trained on ImageNet learn low level features such as edges, textures, gradients, and can transfer this learned knowledge. Small datasets might not have enough data to let untrained models learn these low level features. . 26) What is the “head” of a model? . The head of a model is a smaller neural network added to the last layer of a pretrained model. This head is trainable, and fine-tuned to the applicable dataset. . 27) What kinds of features do the early layers of a CNN find? How about the later layers? . Early layers of a CNN learn low level features such as edges, lines, textures, gradients. Later layers combine the low level features, and contain more complex features such as shapes, text, faces. . 28) Are image models only useful for photos? . No, image models can used for other types of data as well. The caveat is the other types of data must be converted into images at some point. One example is speech. Speech spectrograms can be turned into pictures, and then fed into a model. . 29) What is an “architecture”? . An architecture is the skeleton of a neural network. This architecture includes the number of layers, number of weights, pattern of connections, and activation functions. . 30) What is segmentation? . Segmentation is the act of semantically classifying every pixel of an image. . 31) What is y_range used for? When do we need it? . y_range is used to indicate continuous variables for tabular data. . 32) What are “hyperparameters”? . Hyperparameters are parameters set by the human, and not learned by the model training. Examples of hyperparameters are the learning rate, activation functions, number of layers, number of weights to use. An example of not a parameter, but not a hyperparameter, are the weights of the neural network neurons. These weights are learned through training. . 33) What’s the best way to avoid failures when using AI in an organization? . Best way to avoid failures is to understand the importance of validation and test sets. Validation sets are used to verify the training performance. If the validation sets are used too often, there is a chance to overfit to the validation set. As a result, a test set is used to “double check” a model’s performance. A test set should be used seldomly to avoid overfitting to the test set. .",
            "url": "https://datadote.github.io/blog/2020/03/25/fastbook_ch1_ans.html",
            "relUrl": "/2020/03/25/fastbook_ch1_ans.html",
            "date": " • Mar 25, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # Title &gt; Awesome summary - toc:true- branch: master- badges: true- comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . #collapse-hide import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . #collapse-show cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # single-value selection over [Major_Genre, MPAA_Rating] pairs # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(movies).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(movies).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=alt.Y(&#39;IMDB_Rating:Q&#39;, axis=alt.Axis(minExtent=30)), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=600, height=400 ) . Example 3: More Tooltips . # select a point for which to provide details-on-demand label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=700, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; df = pd.read_json(movies) # display table with pandas df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://datadote.github.io/blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://datadote.github.io/blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://datadote.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

}